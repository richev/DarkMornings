@model Richev.DarkMornings.Web.Models.CommuteInfoViewModel

@if (Model.tw.Daylights == null || Model.fw.Daylights == null)
{
    <p class="question">Ever wondered how much longer you'll be commuting in the dark?</p>

    using (Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        @Html.HiddenFor(model => model.la)
        @Html.HiddenFor(model => model.lo)
        @Html.HiddenFor(model => model.wd)
        <h3>Timings</h3>
        <div class="with-icon">
            <i class="fa fa-clock-o"></i><span>I leave for work at</span>
            <span class="time-selector">
                @Html.DropDownListFor(model => model.tw.h, UIHelpers.GetHours(Model.tw.h))<span class="time-separator">:</span>@Html.DropDownListFor(model => model.tw.m, UIHelpers.GetMinutes(Model.tw.m))
            </span>
        </div>
        <div class="with-icon">
            <i class="fa fa-clock-o"></i><span>I get home from work at</span>
            <span class="time-selector">
                @Html.DropDownListFor(model => model.fw.h, UIHelpers.GetHours(Model.fw.h))<span class="time-separator">:</span>@Html.DropDownListFor(model => model.fw.m, UIHelpers.GetMinutes(Model.fw.m))
            </span>
        </div>
        <div class="accordion">
            <h3><span class="header-text">Workdays</span> <span class="text-info">Which days do you travel to work? Defaults to Mon-Fri, click to change.</span></h3>
            <div class="working-days with-icon">
                <i class="fa fa-road"></i><span>I travel to work on</span>
                <div class="btn-group">
                    @Html.CheckBoxFor(model => model.WorkingDays.Monday)@Html.LabelFor(model => model.WorkingDays.Monday, new { @class = "btn btn-lg first" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Tuesday)@Html.LabelFor(model => model.WorkingDays.Tuesday, new { @class = "btn btn-lg" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Wednesday)@Html.LabelFor(model => model.WorkingDays.Wednesday, new { @class = "btn btn-lg" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Thursday)@Html.LabelFor(model => model.WorkingDays.Thursday, new { @class = "btn btn-lg" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Friday)@Html.LabelFor(model => model.WorkingDays.Friday, new { @class = "btn btn-lg" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Saturday)@Html.LabelFor(model => model.WorkingDays.Saturday, new { @class = "btn btn-lg" })
                    @Html.CheckBoxFor(model => model.WorkingDays.Sunday)@Html.LabelFor(model => model.WorkingDays.Sunday, new { @class = "btn btn-lg" })
                </div>
            </div>
        </div>
        <div style="clear: both;">
            <button class="btn btn-lg btn-success" type="submit">Calculate your commute &raquo;</button>
        </div>
    }

    @Html.ValidationSummary()
}
else
{
    <p>You leave for work at @UIHelpers.FormatCommuteTime(Model.tw) and get back home at @UIHelpers.FormatCommuteTime(Model.fw).</p>
    <p>You do this @Model.wd.Count(d => d == 'x') days a week.</p>
    <p>This means you have...</p>
    <div class="results journey with-icon">
        @UIHelpers.GetJourneyText(Model.tw.Daylights)
    </div>
    <hr class="and" />
    <div class="results journey with-icon">
        @UIHelpers.GetJourneyText(Model.fw.Daylights)
    </div>
    <p class="text-info excluding">(excluding Bank and national holidays)</p>
    <div class="share">
        <a href="http://twitter.com"><i class="fa fa-twitter"></i>Tweet this on Twitter</a>
        <a href="http://facebook.com"><i class="fa fa-facebook-square"></i>Share this on Facebook</a>
    </div>

    <hr class="and" />
    <a href="@Url.Action("Index", "Home")"><i class="fa fa-clock-o"></i>Have another go...</a>
}

<script type="text/javascript">
    function storePosition(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        $("#la").val(latitude.toFixed(2));
        $("#lo").val(longitude.toFixed(2));
    }

    var setWorkingDaysString = function () {
        var wd = (($("#WorkingDays_Sunday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Monday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Tuesday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Wednesday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Thursday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Friday").is(':checked') ? "x" : "o") +
            ($("#WorkingDays_Saturday").is(':checked') ? "x" : "o"));

        $("#wd").val(wd);
    };

    document.ready = function() {
        if (Modernizr.geolocation) {
            navigator.geolocation.getCurrentPosition(storePosition);
        }

        $("input[type=checkbox]").change(setWorkingDaysString);

        $(".accordion").accordion({ header: "h3", collapsible: true, active: false, heightStyle: "content" });;

        setWorkingDaysString();
    };
</script>