@model Richev.DarkMornings.Web.Models.CommuteInfo

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Latitude)
    @Html.HiddenFor(model => model.Longitude)
    <div>
        I leave for work at
        <span class="nowrap">
            @Html.DropDownListFor(model => model.MorningCommute.Hour, UIHelpers.GetHours(Model.MorningCommute.Hour))<span class="time-separator">:</span>@Html.DropDownListFor(model => model.MorningCommute.Minute, UIHelpers.GetMinutes(Model.MorningCommute.Minute))
        </span>
    </div>
    <div>
        I get home from work at
        <span class="nowrap">
            @Html.DropDownListFor(model => model.EveningCommute.Hour, UIHelpers.GetHours(Model.EveningCommute.Hour))<span class="time-separator">:</span>@Html.DropDownListFor(model => model.EveningCommute.Minute, UIHelpers.GetMinutes(Model.EveningCommute.Minute))
        </span>
    </div>
    <div class="working-days">
        I go to work every
        @Html.CheckBoxFor(model => model.WorkingDays.Monday)@Html.LabelFor(model => model.WorkingDays.Monday)
        @Html.CheckBoxFor(model => model.WorkingDays.Tuesday)@Html.LabelFor(model => model.WorkingDays.Tuesday)
        @Html.CheckBoxFor(model => model.WorkingDays.Wednesday)@Html.LabelFor(model => model.WorkingDays.Wednesday)
        @Html.CheckBoxFor(model => model.WorkingDays.Thursday)@Html.LabelFor(model => model.WorkingDays.Thursday)
        @Html.CheckBoxFor(model => model.WorkingDays.Friday)@Html.LabelFor(model => model.WorkingDays.Friday)
        @Html.CheckBoxFor(model => model.WorkingDays.Saturday)@Html.LabelFor(model => model.WorkingDays.Saturday)
        @Html.CheckBoxFor(model => model.WorkingDays.Sunday)@Html.LabelFor(model => model.WorkingDays.Sunday)
    </div>
    <div>
        <hr />
        <button type="submit">Go</button>
    </div>
}

@if (Model.MorningCommute.Daylights != null && Model.EveningCommute.Daylights != null)
{
    <hr />
    <h3>You have...</h3>
    <div class="results journey">
        @UIHelpers.GetJourneyText(Model.MorningCommute.Daylights)
    </div>
    <div class="results and">
        and
    </div>
    <div class="results journey">
        @UIHelpers.GetJourneyText(Model.EveningCommute.Daylights)
    </div>
    <p class="ignoring">(excluding Bank and national holidays...)</p>
}
<script type="text/javascript">
    function storePosition(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        $("#Latitude").val(latitude);
        $("#Longitude").val(longitude);
    }

    document.ready = function() {
        if (Modernizr.geolocation) {
            navigator.geolocation.getCurrentPosition(storePosition);
        }
    };
</script>